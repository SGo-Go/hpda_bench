############################################################
## @file
## @copyright (C) 2021 HLRS
##    All rights reserved.
##
## Use, modification, and distribution is subject to the license.
##
## @author Sergiy Gogolenko <gogolenko@hlrs.de>
##
############################################################

---

- name: Install and configure HiBench on Urika CS at HLRS
  hosts: HLRS
  gather_facts: no
  vars:
    hibench_version: '7.1.1'
    maven_version: '3.8.1'
    hibench_yarn_num_executors: 1 # number of YARN executors is one less than the number of slaves
    hibench_yarn_num_cores: 36
    hibench_memory: 300g
    spark_checkpointing_path: /localscratch/tmp/{{ ansible_user }}
    nfs_path: '/lustre/nec/ws2/ws/{{ ansible_user }}-HiBench'
    hibench_tarball: './hibench-{{ hibench_version }}.tar.gz'
    # spark_prefix: '/opt/bigdata/spark_cluster/spark-2.4.6-bin-hadoop2.7'
    maven_prefix: '~/opt/apache-maven-{{ maven_version }}'
    hibench_frameworks:
      - hadoop
      - spark
    hibench_modules:
      - micro
      - ml
      - sql
      - graph
      # - websearch # requires Apache Mahout
      # - streaming
      # - structuredStreaming
      # - dal
    hibench_default_scales:
      - tiny
      - small
      # - large
      # - huge
      # - gigantic
      # - bigdata
    hibench_scale_profile: small
  tasks:

    - name: Download new HiBench release locally
      run_once: True
      delegate_to: localhost
      # delegate_facts: True
      ansible.builtin.get_url:
        url: 'https://github.com/Intel-bigdata/HiBench/archive/refs/tags/v{{ hibench_version }}.tar.gz'
        dest: '{{ hibench_tarball | default(".") }}'
        mode: '0440'
        force: no
        # creates: '{{ hibench_tarball }}'
      register: hibench_local_tarball
      tags: deploy

    - name: Create HiBench directory if it does not exist
      ansible.builtin.file:
        path: '{{ hibench_prefix }}'
        state: directory
        mode: '0755'
      tags: deploy
    
    - name: Unarchive HiBench tarball
      unarchive:
        src: '{{ hibench_tarball }}'
        dest: '{{ hibench_prefix }}/'
        extra_opts: [--strip-components=1]
        creates: '{{ hibench_prefix }}/conf'
      tags: deploy

    ###############################################################################
    # Prepare Maven for installing HiBench
    ###############################################################################
    # - name: Download Maven locally
    #   run_once: True
    #   delegate_to: localhost
    #   delegate_facts: True
    #   ansible.builtin.get_url:
    #     url: 'https://downloads.apache.org/maven/maven-{{ maven_version.split(".")[0] }}/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz'
    #     dest: '{{ hibench_tarball | default(".") }}'
    #     mode: '0440'
    #     # checksum: 'sha512:https://downloads.apache.org/maven/maven-{{ maven_version.split(".")[0] }}/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz.sha512'
    #     force: no
    #   register: maven_local_tarball
    #   when: maven_prefix is defined
      # when: spack_mirror_dir is not directory
      
    - name: Create Maven folder (for settings, caches, etc)
      ansible.builtin.file:
        path: '~/.m2'
        state: directory
        mode: '0755'
      tags: [deploy, maven]

    - name: Fix URL for downloading Mahout distribution (use Apache archive instead of Cloudera)
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/hadoopbench/mahout/pom.xml'
        regexp: 'item.From'
        line: 'item.To'
        state: present
        # backrefs: yes
      tags: configure
      with_items:
       - { From: '<repo2>http://archive.cloudera.com</repo2>', To: '<repo2>https://archive.apache.org</repo2>' }
       - { From: '<file2>cdh5/cdh/5/mahout-0.9-cdh5.1.0.tar.gz</file2>', To: '<file2>dist/mahout/0.9/mahout-distribution-0.9.tar.gz</file2>' }
       - { From: '<checksum2>aa953e0353ac104a22d314d15c88d78f</checksum2>', To: '<checksum2>09b999fbee70c9853789ffbd8f28b8a3</checksum2>' }

    ###############################################################################
    # Configure benchmark (scale, tests, etc)
    ###############################################################################
    - name: Set up benchmark scale profile
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/hibench.conf'
        regexp: ^(hibench\.scale\.profile\s*).*
        line: \g<1> {{ hibench_scale_profile }}
        backrefs: yes
      tags: configure

    - name: Comment out tests which are not supposed to be run
      ansible.builtin.replace:
        path: '{{ hibench_prefix }}/conf/benchmarks.lst'
        regexp: '^(sql|websearch)\.(.*)$'
        replace: ''
      tags: configure

    - name: Remove Hadoop from the list of frameworks to benchmark
      ansible.builtin.replace:
        path: '{{ hibench_prefix }}/conf/frameworks.lst'
        regexp: '^hadoop$'
        replace: ''
      tags: configure

    ###############################################################################
    # Configure Hadoop and Spark to use NFS
    ###############################################################################
    # Reuse default config templates 
    - name: Create folder for default configs at the given system
      ansible.builtin.file:
        path: '{{ hibench_prefix }}/conf/templates'
        state: directory
        mode: '0755'
      tags: configure

    - name: Reuse default templates for configs ("spark.conf", "hadoop.conf")
      ansible.builtin.copy:
        src: '{{ hibench_prefix }}/conf/{{ item }}.template'
        dest: '{{ hibench_prefix }}/conf/templates/{{ item }}'
        remote_src: yes
      loop:
        - hadoop.conf
        - spark.conf
      tags: configure

    # Configure Hadoop to use NFS instead of HDFS
    - name: Set Hadoop home
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/hadoop.conf'
        regexp: ^(hibench\.hadoop\.home\s*).*$
        line: \g<1> {{ hadoop_prefix }}
        backrefs: yes
      when: hadoop_prefix is defined
      tags: [never, configure]

    - name: Set HDFS master
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/hadoop.conf'
        regexp: ^(hibench\.hdfs\.master\s*).*$
        line: \g<1> file://{{ nfs_path }}
        backrefs: yes
      tags: configure

    # Configure Spark
    - name: Set Spark home
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.spark\.home\s*).*$
        line: \g<1> {{ spark_prefix }}
        backrefs: yes
      when: spark_prefix is defined
      tags: [never, configure]
    
    - name: Set default Spark master to local[*]
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.spark\.master\s*).*$
        line: \g<1> local[*]
        backrefs: yes
      tags: configure

    # - name: Create Spark checkpoint folder
    #   ansible.builtin.file:
    #     path: '{{ spark_checkpointing_path }}'
    #     state: directory
    #     mode: '0755'
    #   tags: [never, configure]
    
    - name: Set Spark checkpoint path
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.streambench\.spark\.checkpointPath\s*).*$
        line: \g<1> {{ spark_checkpointing_path }}
        backrefs: yes
      tags: configure

    - name: Set default Spark master to localhost
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.masters\.hostnames\s*).*$
        line: \g<1> localhost
        backrefs: yes
      tags: configure

    - name: Set default Spark slave to localhost
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.slaves\.hostnames\s*).*$
        line: \g<1> localhost
        backrefs: yes
      tags: configure

    - name: Set number of YARN executors
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.yarn\.executor\.num\s*).*$
        line: \g<1> {{ hibench_yarn_num_executors }}
        backrefs: yes
      tags: configure

    - name: Set number of cores per YARN executor
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(hibench\.yarn\.executor\.cores\s*).*$
        line: \g<1> {{ hibench_yarn_num_cores }}
        backrefs: yes
      tags: configure

    - name: Set executor memory size
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(spark\.executor\.memory\s*).*$
        line: \g<1> {{ hibench_memory }}
        backrefs: yes
      tags: configure

    - name: Set driver memory size
      ansible.builtin.lineinfile:
        path: '{{ hibench_prefix }}/conf/templates/spark.conf'
        regexp: ^(spark\.driver\.memory\s*).*$
        line: \g<1> {{ hibench_memory }}
        backrefs: yes
      tags: configure

    ###############################################################################
    # Prepare scripts
    ###############################################################################
    - name: Prepare HiBench initialization script
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/init_hibench.sh
        dest: '{{ hibench_prefix }}/bin/init_hibench.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    - name: Prepare script to build HiBench
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/build_hibench.sh
        dest: '{{ hibench_prefix }}/bin/build_hibench.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    - name: Copy script for preparing inputs
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/prepare.sh
        dest: '{{ hibench_prefix }}/bin/prepare.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    - name: Copy script for submitting job that prepares inputs
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/submit_prepare_all.sh
        dest: '{{ hibench_prefix }}/bin/submit_prepare_all.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    - name: Copy script for running benchmark
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/run.sh
        dest: '{{ hibench_prefix }}/bin/run.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    - name: Copy script for submitting job that runs benchmark
      ansible.builtin.template:
        src: scripts/{{ inventory_hostname }}/submit_run_all.sh
        dest: '{{ hibench_prefix }}/bin/submit_run_all.sh'
        mode: u=rwx,g=rx,o=r
      tags: [script, configure]

    ###############################################################################
    # Set up internet access at the remote environment
    ###############################################################################
    # - name: Set up proxy for Maven
    #   ansible.builtin.copy:
    #     content: |
    #       <settings>
    #         <proxies>
    #           <proxy>
    #             <id>ssh proxy</id>
    #             <active>true</active>
    #             <protocol>http</protocol>
    #             <host>127.0.0.1</host>
    #             <port>8118</port>
    #           </proxy>
    #         </proxies>
    #       </settings>
    #     dest: '~/.m2/settings.xml'
    #     # force: yes
    #   tags: [deploy, maven]

    - name: Create Proxychains folder
      ansible.builtin.file:
        path: '~/.proxychains'
        state: directory
        mode: '0755'
      when: with_proxychains is defined

    - name: Set up Proxychains
      ansible.builtin.copy:
        content: |
          strict_chain
          quiet_mode
          remote_dns_subnet 224
          tcp_read_time_out 15000
          tcp_connect_time_out 8000
          localnet 127.0.0.0/255.0.0.0
          localnet 10.0.0.0/255.0.0.0
          localnet 172.16.0.0/255.240.0.0
          localnet 192.168.0.0/255.255.0.0
          [ProxyList]
          http  127.0.0.1  8118
        dest: '~/.proxychains/proxychains.conf'
        # force: yes
      when: with_proxychains is defined
